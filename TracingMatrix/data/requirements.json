[
  {
    "id": "technicals-details",
    "name": "Технические характеристики СУБД",
    "description": "<p>Объем базы данных: до 16 млн таблиц и индексов<br>Размер строкового значения (включая BINARY/VARBINARY, но кроме BLOB/CLOB полей): до 4000 байт<br>Размер BLOB/CLOB-значения: 2^64<br>Количество полей в записи: до 2048 (ограничение исполнительной системы)<br>Минимальный объем памяти, занимаемой ядром СУБД: 512 Мб<br>Максимальный размер таблицы: не ограничено<br>Максимальное число записей в одной таблице: не ограничено<br>Количество записей, выбираемых одним запросом: не ограничено<br>Максимальный размер поля (кроме BLOB/CLOB полей): до 4000 байт<br>Максимальное число индексов в таблице: явных ограничений нет<br>Администрирование: утилиты (в том числе и псевдографические) для Windows и UNIX – рабочий стол, архиватор БД, конвертер БД, тестирование и восстановление БД, миграция БД<br>Утилиты для Windows и UNIX:<br>- для исполнения запросов интерактивно из консоли или батчем из файла<br>- для остановки сервиса<br>- для ожидания готовности сервиса после запуска<br>- для импорта и экспорта данных из/в CSV<br>Тестирование и восстановление БД решаются через команды сервиса.<br>Поддержка средств интернационализации: Поддержка объектов CHARACTER SET и TRANSLATION стандарта SQL. Поддержка кириллических кодировок (CP1251), многобайтовых кодировок (UTF-8). Поддержка UNICODE (для всех версий)<br>Типы данных:<br>- CHAR, <br>- VARCHAR, <br>- BOOLEAN, <br>- NUMBER(precision, scale) (синонимы NUMERIC(precision, scale), DECIMAL(precision, scale), NUMBER(38,0) (синонимы SMALLINT, INTEGER (INT), BIGINT), <br>- DATE, <br>- TIMESTAMP, <br>- BLOB, <br>- CLOB, <br>- BINARY, <br>- VARBINARY (синоним RAW), <br>- ROWID<br>Целевой стандарт языка SQL: Система разработана с опорой на стандарт ANSI SQL:2016<br>Процедурные расширения языка SQL: Собственный синтаксис языка хранимых процедур и триггеров, близкий к PL/SQL<br></p>",
    "status": "Готово",
    "version": "1"
  },
  {
    "id": "sql",
    "name": "SQL",
    "description": "Команды языка SQL",
    "status": "В разработке",
    "version": "1",
    "children": [
      {
        "id": "sql-objects-naming",
        "name": "Именование объектов БД и обращение к ним",
        "description": "<p>1. Регистронезависимость имени объекта, названия или модификатора команды<br>1.1. Для имени объекта БД, заключенного в двойные кавычки, регистр символов сохраняется<br>1.2. Для имени объекта БД, указанного без двойных кавычек, все символы приводятся к верхнему регистру<br>2. Допустимые символы имени объекта<br>2.1. Для имени, заключенного в двойные кавычки, - любые (исключая символ с кодом 0), включая пробел <br>2.2. Для имени, указанного без двойных кавычек, - латинские буквы, цифры и символы \"_\", \"#\", \"$\"<br>3. Первый символ имени<br>3.1. В случае имени, заключенного в двойные кавычки, для PRIVATE TEMPORARY TABLE первым в имени должен стоять символ \"#\",<br> для остальных объектов - любой символ (исключая символ с кодом 0 и #), включая пробел<br>3.2. В случае имени, указанного без двойных кавычек, для PRIVATE TEMPORARY TABLE первым в имени должен стоять символ \"#\", для остальных объектов - латинская буква или символ \"_\" <br>\"$\" нельзя использовать первым в имени, т.к. он зарезервирован в качестве первого символа для системных объектов<br>4. Имена объектов БД фиксированы, их нельзя изменять<br>5. Уникальность имен объектов БД<br>5.1. Имена объектов TABLE, SEQUENCE, PROCEDURE, VIEW, INDEX должны быть уникальными в рамках одной схемы<br>5.2. Имя SCHEMA должно быть уникальным среди имён существующих в БД схем<br>5.3. Имя USER должно быть уникальным среди имён существующих в БД пользователей<br>5.4. Имя ROLE должно быть уникальным среди имён существующих в БД ролей<br>6. Максимальная длина имени объекта БД - 64 байта (размер внутреннего представлении имени в виде набора байтов, имя объекта в SOQOL всегда хранится в кодировке БД)<br>7. При создании любого объекта в текущей схеме или обращении к объекту, допускается указание как полного имени, состоящего из имени схемы и краткого имени объекта, разделённых точкой, так и краткого имени<br></p>",
        "status": "В разработке",
        "version": "1"
      },
      {
        "id": "sql-commands-case-insensitivity",
        "name": "Регистронезависимость названий SQL-команд и их модификаторов",
        "description": "Названия команд SQL, так же как и их модификаторы/ключевые слова, являются регистронезависимыми; все символы в имени команды автоматически приводятся к верхнему регистру",
        "status": "В разработке",
        "version": "1"
      },
      {
        "id": "sql-delimiter-characters",
        "name": "Символы-разделители, используемые в SQL-запросах",
        "description": "<p>Допустимыми символами-разделителями, отделяющими друг от друга имена объектов,<br>названия команд и их модификаторы друг от друга, а также от специальных символов,<br>определенных в требованиях к синтаксису к каждой команде, являются символы типов<br>- пробел,<br>- символ табуляции,<br>- символа переноса строки,<br>которые при формировании запроса могут следовтаь друг за другом в любом порядке и количестве<br><br></p>",
        "status": "В разработке",
        "version": "1"
      },
      {
        "id": "sql-ddl",
        "name": "DDL",
        "description": "Команды DDL - языка определения данных",
        "children": [
          {
            "id": "sql-ddl-create-index",
            "name": "CREATE INDEX",
            "description": "Команда CREATE INDEX создания индекса.\n1. Синтаксические требования\n1.1. Общие требования к имени объекта БД (см. <link type='requirement' id='sql-objects-naming'/> )\n1.2. Регистронезависимость названия команды (см. <link type='requirement' id='sql-commands-case-insensitivity'/> )\n1.3. Синтаксис команды CREATE INDEX\nCREATE [UNIQUE] INDEX <имя_индекса> ON <имя_таблицы> (<имя_столбца>[, <имя_столбца>...]);\nгде\n- <имя_индекса> - указывается имя создаваемого индекса\n- <имя_таблицы> - указывается имя таблицы, по столбцам которой создается индекса\n- <имя_столбца> - указывается имя одного из столбцов, по которым будет построен индекса\n- UNIQUE - указывает на то, что индекс должен сохранять внутри таблицы БД состояние уникальности значений по совокупности заданных столбцов, по которым он построен, \nблокируя попытки нарушения уникальности (при изменении значений или добавлении новых значений).\nЕсли изначально совокупные значения столбцов, по которым планируется построить уникальный индекс, не обладают характеристикой уникальности, \nто в ответ на команду создания индекса с характеристикой UNIQUE будет возвращена ошибка.\n2. Требования, связанные с ограничениями на количество создаваемых объектов - количество индексов, создаваемых для одной таюлицы, не ограничено.\n3. Выполнение ограничений, связанных с системными и объектными привилегиями пользователей БД (см. <link type='requirement' id=>)",
            "status": "В разработке",
            "version": "1",
            "children": [
              {
                "id": "sql-ddl-create-index-syntax",
                "name": "Cинтаксис команды CREATE INDEX",
                "description": "<p>1. Общие требования к имени объекта БД (см.\n    <link type=\"requirement\" id=\"sql-objects-naming\"> )<br>2. Регистронезависимость названия команды (см.\n    <link type=\"requirement\" id=\"sql-commands-case-insensitivity\"> )<br>3. Синтаксис команды CREATE INDEX:<br>CREATE [UNIQUE] INDEX &lt;имя_индекса&gt; ON &lt;имя_таблицы&gt; (&lt;имя_столбца&gt;[, &lt;имя_столбца&gt;...]);<br>где<br>- &lt;имя_индекса&gt; - указывается имя создаваемого индекса<br>- &lt;имя_таблицы&gt; - указывается имя таблицы, по столбцам которой создается индекса<br>- &lt;имя_столбца&gt; - указывается имя одного из столбцов, по которым будет построен индекса<br>- UNIQUE - указывает на то, что индекс должен сохранять внутри таблицы БД состояние уникальности значений по совокупности заданных столбцов, по которым он построен<br>\n</p>",
                "status": "В разработке",
                "version": "1"
              },
              {
                "id": "sql-ddl-create-index-db-objects",
                "name": "Объекты, для которых возможно создание индекса",
                "description": "Объектом, для которого создается индекс, может быть только таблица.",
                "status": "В разработке",
                "version": "1"
              },
              {
                "id": "sql-ddl-create-index-column-types",
                "name": "Индексируемые типы столбцов",
                "description": "Создание индекса командой CREATE INDEX возможно для столбцов любых типов, за исключением громоздких типов данных BLOB и CLOB",
                "status": "В разработке",
                "version": "1"
              },
              {
                "id": "sql-ddl-create-index-unique",
                "name": "UNIQUE",
                "description": "Модификатор UNIQUE команды CREATE INDEX (CREATE UNIQUE INDEX) указывает на то, что индекс должен сохранять внутри таблицы БД состояние уникальности значений по совокупности заданных столбцов, по которым он построен, \nблокируя попытки нарушения уникальности (при изменении значений или добавлении новых значений).\nЕсли изначально совокупные значения столбцов, по которым планируется построить уникальный индекс, не обладают характеристикой уникальности, \nто в ответ на команду создания индекса с характеристикой UNIQUE будет возвращена ошибка",
                "status": "В разработке",
                "version": "1"
              },
              {
                "id": "sql-ddl-create-index-access",
                "name": "Права на выполнение команды",
                "description": "<p>Создать индекс может:<br>– пользователь базы данных с системной привилегией RESOURCE CONTROL в своей схеме по умолчанию;<br>– пользователь базы данных с системной привилегией RESOURCE CONTROL и объектной привилегией INDEX для таблицы в чужой схеме;<br>– пользователь базы данных с системной привилегией DATABASE ADMIN.<br></p>",
                "status": "В разработке",
                "version": "1"
              }
            ]
          }
        ]
      },
      {
        "id": "dml",
        "name": "DML",
        "description": "Команды DML - языка манипулирования данными",
        "children": [
          {
            "id": "insert-values",
            "name": "Добавление в таблицу заданных значений",
            "description": "<p>Команда INSERT INTO TABLE ... VALUES должна выполнять вставку заданных значений</p><p>INSERT INTO &lt;имя_таблицы&gt; [(&lt;имя_столбца&gt;[, имя_столбца...])]&nbsp;VALUES (&lt;значение&gt;[, &lt;значение&gt;...]) [&lt;конструкция_RETURNING&gt;];</p><p>&nbsp;&lt;значение&gt; ::= &lt;выражение&gt; | NULL | DEFAULT</p><p>Где:</p><p>&nbsp;- &lt;имя_таблицы&gt; - должно указываться имя таблицы, в которую необходимо добавить данные;</p><p>&nbsp;- &lt;имя_столбца&gt; &ndash; должно указываться имя столбца, в строку которого необходимо добавить &lt;значение&gt;, указанное после ключевого слова VALUES.</p><p>Указание параметра &nbsp;;</p><p>по синтаксису необязательны \"&lt;столбцы&gt;)\", а не один столбец</p><p>- &lt;значение&gt; &ndash; должно указываться значение данных, которое необходимо добавить в таблицу. Значение может быть:</p><ol><li>&lt;выражение&gt; &ndash; значение параметра (значение заданного выражения);</li><li>NULL &ndash; должно означать, что в случае отсутствия значения при вставке данных и явного упоминания столбца будет добавлено NULL-значение;</li><li>DEFAULT &ndash; должно означать, что в случае отсутствия значения при вставке данных и явного упоминания столбца будет добавлено значение по умолчанию, указанное при создании таблицы;</li></ol><p>Список значений должен соответствовать количеству имён столбцов команды INSERT. При отсутствии списка имён столбцов  значения должны вноситься в строки всех столбцов, указанных при создании таблицы.</p><p>&lt;конструкция_RETURNING&gt; - конструкция, позволяющая получить добавленные данные</p> <p>Выполнить команду INSERT INTO TABLE ... VALUES может:</p><p>- владелец таблицы;</p><p>- пользователь базы данных с объектной привилегией INSERT;</p><p>- пользователь базы данных с системной привилегией DATABASE ADMIN.</p>"
          },
          {
            "id": "insert-select",
            "name": "Добавление в таблицу результата SELECT-запроса",
            "description": "<p>Команда INSERT INTO TABLE ... SELECT должна выполнять вставку значений, которые являются результатом выборки</p><p>INSERT INTO &lt;имя_таблицы&gt; [(&lt;имя_столбца&gt;[, имя_столбца...])] &lt;SELECT-запрос&gt; [&lt;конструкция_RETURNING&gt;]</p><p>Где:</p><p>- &lt;имя_таблицы&gt; - должно указываться имя таблицы, в которую необходимо добавить данные;</p><p>- &lt;имя_столбца&gt; &ndash; должно указываться имя столбца, в который будут добавляться значения из соответствующего по номеру столбца результатов &lt;SELECT-запроса&gt;.</p><p>Указание параметра &lt;имя_столбца&gt; не является обязательным. При его отсутствии вставка должна осуществляться в столбцы, указанные при создании таблицы;</p><p>- &lt;SELECT-запрос&gt; &ndash; должен указываться для выборки значений из строк другой таблицы для их последующей вставки.</p><p>Количество столбцов результата &lt;SELECT-запроса&gt; должно соответствовать количеству имён столбцов команды INSERT.</p>"
          }
        ]
      },
      {
        "id": "function",
        "name": "Функции",
        "description": "",
        "children": [
          {
            "id": "function-min",
            "name": "MIN ",
            "status": "",
            "version": "1",
            "description": "Функция MIN находит минимальное значение в заданном столбце в таблице.",
            "expected-result": "",
            "scenarios": [
              {
                "id": "",
                "name": "",
                "preconditions": [
                ],
                "steps": []
              }
            ],
            "comment": ""
          },
          {
            "id": "function-max",
            "name": "MAX",
            "status": "",
            "version": "1",
            "description": "",
            "expected-result": "",
            "scenarios": [
              {
                "id": "",
                "name": "",
                "preconditions": [
                ],
                "steps": []
              }
            ],
            "comment": ""
          }
        ]
      }
    ]
  },
  {
    "id": "server-stop",
    "name": "Отключение от сервиса управления базами данных",
    "status": "",
    "version": "1",
    "description": "Отключение от сервиса управления базами данных, предоставляемому сервером СУБД.",
    "expected-result": "Отключение от сервиса СУБД выполнено успешно.",
    "scenarios": [
      {
        "id": "S0",
        "name": "Основной сценарий",
        "preconditions": [
          "Сервер запущен.",
          "Для работы сценария подготовлен пользователь, имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Пользователь запускает утилиту останова сервера с указанием своих данных в строке подключения к сервису управления управления базами данных.",
          "Сервер проводит аутентификацию данных пользователя.<br>Сервер отображает сообщение о штатном завершении работы и останавливает свою работу – серверное приложение завершается."
        ]
      },
      {
        "id": "S1-N",
        "name": "Основной сценарий",
        "preconditions": [
          "Сервер запущен.",
          "Для работы сценария подготовлен пользователь, не имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Пользователь запускает утилиту останова сервера с указанием своих данных в строке подключения к сервису управления базами данных.",
          "Данные пользователя не проходят аутентификацию.<br>Сервер возвращает ошибку аунтификации."
        ]
      }
    ],
    "comment": ""
  },
  {
    "id": "database-create",
    "name": "Создание базы данных",
    "status": "",
    "version": "1",
    "description": "Сервис управления базами данных поддерживает команду создания базы данных.<br>Команда должна иметь возможность настроить следующие параметры базы данных: кодировку данных БД с возможностью поддержания русских букв;<br>database.dblog.file_size = <размер одного файла>;<br>database.histlog.file_size = <размер файла>;<br>database.histlog.min_file_ring = <минимальное количество файлов>;<br>database.histlog.max_file_ring = <максимальное количество файлов>;<br>Именования параметров см. в приложении 3.<br>Имя базы данных должно:<br>1. Быть уникальным среди существующих БД.<br>2. Допускать наличие всех символов (правила именования см. в приложении 4).<br>Выполнить создание базы данных может только пользователь с привилегией администратора базы данных.",
    "expected-result": "Создана база данных с указанным именем и параметрами.",
    "scenarios": [
      {
        "id": "S0",
        "name": "Основной сценарий",
        "preconditions": [
          "Выполнено требование к окружению в части минимального объема свободного дискового пространства для возможности создания базы данных.",
          "Успешно выполнено подключение к сервису управления базами данных.",
          "Для работы сценария подготовлен пользователь, имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Пользователь запускает команду создания базы данных с указанием:",
          "• имени базы данных, состоящее из допустимых символов и уникальное среди существующих БД;",
          "• пути к каталогу базу данных с именем, которое должно совпадать с именем создаваемой базы данных;",
          "• одной или нескольких необходимых опций.",
          "Сервер проводит аутентификацию данных пользователя – успешно.",
          "Система создаёт базу данных с соответствующими параметрами и подкаталог новой БД в текущем каталоге."
        ]
      },
      {
        "id": "S1-N",
        "name": "Дополнительный сценарий",
        "preconditions": [
          "См предусловия в S0. Основной сценарий."
        ],
        "steps": [
          "Пользователь запускает команду создания базы данных с указанием:",
          "• имени базы данных, латиницей и цифрами без кавычек или русскими буквами и цифрами, но в двойных кавычках;",
          "• имя создаваемой базы данных должно быть уникальным среди существующих БД;",
          "• пути к каталогу базу данных с именем, отличным от имени создаваемой базы данных одной или нескольких необходимых опций.<br>Система возвращает соответствующую ошибку."
        ]
      }
    ],
    "comment": ""
  },
  {
    "id": "database-stop",
    "name": "Останов базы данных",
    "status": "",
    "version": "1",
    "description": "Возможность останова базы данных, с успешным завершением выполняемых транзакций и отсоединением всех пользователей от базы данных.<br>Останов базы данных позволяет в дальнейшем запускать её без необходимости восстановления данных.<br>Выполнить останов базы данных может только пользователь с привилегией администратора базы данных.",
    "expected-result": "База данных остановлена. Все транзакции успешно завершены. Все пользователи отсоединены от базы данных.",
    "scenarios": [
      {
        "id": "S0",
        "name": "Основной сценарий",
        "preconditions": [
          "База данных запущена.",
          "К базе данных подключены пользователи.",
          "Для работы сценария подготовлен пользователь, имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Пользователь с правами администратора подключается к базе данных.",
          "Пользователь запускает команду останова базы данных: shutdown database <имя_БД>;",
          "Сервер проверяет соответствие прав пользователя для возможности выполнения запущенной команды.<br>Сервер завершает все транзакции (или по окончании транзакций?) и выполняет останов БД."
        ]
      },
      {
        "id": "S1-N",
        "name": "Дополнительный сценарий",
        "preconditions": [
          "1. См. предусловия S0. Основной сценарий, кроме п.3"
        ],
        "steps": [
          "Пользователь подключается к базе данных.",
          "Пользователь запускает команду останова базы данных: shutdown database <имя_БД>;",
          "Сервер проверяет соответствие прав пользователя для возможности выполнения запущенной команды и выявляет несоответствие.<br>Сервер возвращает ошибку, что у пользователя нет прав на останову сервера."
        ]
      }
    ],
    "comment": ""
  },
  {
    "id": "database-drop",
    "name": "Удаление базы данных",
    "status": "",
    "version": "1",
    "description": "Удаление базы данных с удалением её каталога. Удаление БД может выполнить только администратор БД и только после её успешного останова.",
    "expected-result": "Удалена база данных и её каталог.",
    "scenarios": [
      {
        "id": "S0",
        "name": "Основной сценарий",
        "preconditions": [
          "База данных остановлена.",
          "Для работы сценария подготовлен пользователь, имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Пользователь с правами администратора подключается к базе данных.",
          "Пользователь запускает команду останова базы данных: drop database <имя_БД>;",
          "Сервер проверяет соответствие прав пользователя для возможности выполнения запущенной команды.<br>Сервер удаляет БД и её каталог."
        ]
      },
      {
        "id": "S1-N",
        "name": "Дополнительный сценарий",
        "preconditions": [
          "База данных остановлена.",
          "Для работы сценария подготовлен пользователь, не имеющий привилегию администратора базы данных."
        ],
        "steps": [
          "Первые 2 шага см. в шагах сценарий S0. Основной сценарий.",
          "Сервер проверяет соответствие прав пользователя для возможности выполнения запущенной команды и выявляет несоответствие.<br>Сервер возвращает ошибку, что у пользователя нет прав на удаление бд."
        ]
      }
    ],
    "comment": ""
  }
]